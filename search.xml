<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>Hexo+Coding搭建个人博客及绑定个人域名</title>
      <link href="/2018/08/11/Hexo-Coding%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%8F%8A%E7%BB%91%E5%AE%9A%E5%9F%9F%E5%90%8D/"/>
      <url>/2018/08/11/Hexo-Coding%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%8F%8A%E7%BB%91%E5%AE%9A%E5%9F%9F%E5%90%8D/</url>
      <content type="html"><![CDATA[<p>关于这个主题<a href="https://hexo.io/zh-cn/docs/index.html" target="_blank" rel="noopener">hexo官方文档</a>上说的很详细，但还是很难仅通过一篇文章就能过一口气完美搭建，中间还是踩到不少雷（一把辛酸泪），所以还是想拿这篇文章来记录下。<br><a id="more"></a></p><hr><h1 id="技术博客的选择"><a href="#技术博客的选择" class="headerlink" title="技术博客的选择"></a>技术博客的选择</h1><p>现在网上很多的教程都是基于<strong>hexo+github</strong>的，包括我之前也是托管在Github Pages上面，但是由于是国外服务器所以访问起来有点慢（其实相当慢，我会瞎说？）于是朝coding投怀送抱，支持下国产。</p><h1 id="安装必要依赖"><a href="#安装必要依赖" class="headerlink" title="安装必要依赖"></a>安装必要依赖</h1><p>这两个环境直接下载安装就行了，应该不会有什么大问题</p><ul><li><a href="https://nodejs.org/en/" target="_blank" rel="noopener">Node.js</a></li><li><a href="https://gitforwindows.org/" target="_blank" rel="noopener">Git</a></li></ul><h1 id="Hexo安装"><a href="#Hexo安装" class="headerlink" title="Hexo安装"></a>Hexo安装</h1><p>安装好git以及node.js之后，在电脑的任意盘里新建一个空文件夹，命名随意(比如<code>blog</code>)，最好是纯英文。然后打开这个空文件夹，鼠标右键选择Git Bash。</p><p>输入以下一下命令安装Hexo<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo -g</span><br><span class="line">可能会安装失败（这是我遇到的第一个坑），安装失败选择下边这种方式(淘宝源安装):</span><br><span class="line">npm install -g cnpm --registry=https:<span class="comment">//registry.npm.taobao.org`**</span></span><br><span class="line">cnpm install hexo-cli -g</span><br><span class="line">Hexo安装完成之后，输入下面指令初始化Hexo</span><br><span class="line">hexo init</span><br></pre></td></tr></table></figure></p><h1 id="本地运行"><a href="#本地运行" class="headerlink" title="本地运行"></a>本地运行</h1><p>在你刚才新建的空文件夹（blog）下右键选择<code>Git Bash</code><br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean # 清除历史生成的静态文件</span><br><span class="line">hexo generate # 生成静态文件(简写：hexo g)</span><br><span class="line">hexo server # 启动本地服务(简写: hexo s)</span><br></pre></td></tr></table></figure></p><p> 一顿操作猛如虎以后，看到下面这条指令，代表服务开启成功，<em>浏览器中输入以下网站</em>就可以看到刚刚搭建的静态网页。<br> <code>INFO  Start processing</code><br><code>INFO  Hexo is running at http://localhost:4000/. Press Ctrl+C to stop.</code></p><h1 id="Coding-pages-设置"><a href="#Coding-pages-设置" class="headerlink" title="Coding pages 设置"></a>Coding pages 设置</h1><p>现在我们已经在本地搭建好了我们的博客，麻溜儿部署起来让大家看到。</p><p>先打开<a href="https://coding.net/" target="_blank" rel="noopener">coding</a>,右上角注册一下。</p><h2 id="创建一个新仓库"><a href="#创建一个新仓库" class="headerlink" title="创建一个新仓库"></a>创建一个新仓库</h2><figure class="image-box">                <img src="0.png" alt="[ 创建新仓库 ]" title="" class="">                <p>[ 创建新仓库 ]</p>            </figure><p><img src="1.png" alt="[ 注意仓库名的格式是固定的，用户名+coding.me 不一致会出错 ]"></p><h2 id="开启静态pages"><a href="#开启静态pages" class="headerlink" title="开启静态pages"></a>开启静态pages</h2><p><img src="2.png" alt="[这是开启展示功能 ]"></p><h3 id="绑定个人域名，如果不需要可直接跳到添加部署密钥"><a href="#绑定个人域名，如果不需要可直接跳到添加部署密钥" class="headerlink" title="绑定个人域名，如果不需要可直接跳到添加部署密钥"></a>绑定个人域名，如果不需要可直接跳到添加部署密钥</h3><figure class="image-box">                <img src="3.png" alt="[点击设置]" title="" class="">                <p>[点击设置]</p>            </figure><figure class="image-box">                <img src="4.png" alt="[将你的个人域名输入 ]" title="" class="">                <p>[将你的个人域名输入 ]</p>            </figure><blockquote><p>注意个人域名的解析参考 <a href="https://coding.net/help/doc/pages/domain.html" target="_blank" rel="noopener">coding 官方帮助文档</a></p></blockquote><h2 id="添加部署密钥"><a href="#添加部署密钥" class="headerlink" title="添加部署密钥"></a>添加部署密钥</h2><p>打开<code>Git bash</code>，输入<code>ssh-keygen -t rsa -C &quot;897691781@qq.com</code>“,这个邮箱地址换成你的。连续四次回车就生成了一对密钥。<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Your identification has been saved <span class="keyword">in</span> /c/Users/韓仁輝/.ssh/id_rsa.</span><br><span class="line">Your public key has been saved <span class="keyword">in</span> /c/Users/韓仁輝/.ssh/id_rsa.pub.</span><br></pre></td></tr></table></figure></p><p>它会告诉你密钥生成在那个文件夹,上面是我的密钥生成路径，下面要相应替换成你的，使用cat来查看公钥内容：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /c/Users/韓仁輝/.ssh/id_rsa.pub</span><br></pre></td></tr></table></figure><p>复制输出的内容，打开<code>coding</code>你刚刚创建的项目，点击页面左侧设置里的部署公钥，点击新建公钥，把你刚刚复制的内容粘贴进去就可以了。</p><h1 id="git部署静态界面"><a href="#git部署静态界面" class="headerlink" title="git部署静态界面"></a>git部署静态界面</h1><p>通过git将你的静态页面push到你刚刚创建的coding pages上去</p><p>还是在<code>blog</code>根目录下，右键<code>Git Bash</code>，输入以下指令安装一个hexo的部署工具<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure></p><p>安装完成以后，需要配置部署路径，打开blog文件夹下的<code>_config.yml</code>（打开方式别选记事本，编码不支持中文），下滑找到<code>deploy:</code>，将deploy修改为<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy: </span><br><span class="line">  type: git</span><br><span class="line">  repo:  git@git.coding.net:HanRenHui/HanRenHui.coding.me.git #注意将用户名换为你自己的</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure></p><p>别忘记<code>ctril+s</code>保存一下，还是在<code>blog/</code>目录下，用hexo命令完成最终部署：<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo generate</span><br><span class="line">hexo deploy</span><br><span class="line"># 2 3可以简写为 hexo g -d</span><br></pre></td></tr></table></figure></p><p>恭喜，打开浏览器在地址栏输入用户名.coding.me（有个人域名直接输入个人域名）就可以访问自己的博客啦!!!</p>]]></content>
      
      <categories>
          
          <category> 教程 </category>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Hello World</title>
      <link href="/2018/08/04/hello-world/"/>
      <url>/2018/08/04/hello-world/</url>
      <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
        <tags>
            
            <tag> Hello World </tag>
            
        </tags>
      
    </entry>
    
  
  
</search>
